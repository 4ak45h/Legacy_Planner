const mongoose = require('mongoose');

const FinancialProfileSchema = new mongoose.Schema({
  user: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'User',
    required: true,
    unique: true, // A user should only have one financial profile
  },
  // --- Personal/Income Data (From forms) ---
  fullName: { type: String, required: true },
  age: { type: Number, required: true },
  familySize: { type: Number, default: 1 },
  employmentType: { type: String, required: true, enum: ['Salaried', 'Self-Employed', 'Business'] },
  monthlyIncome: { type: Number, required: true },
  annualIncome: { type: Number, required: true },
  currentSavings: { type: Number, default: 0 },
  investmentPortfolio: { type: Number, default: 0 },
  monthlyExpenses: { type: Number, required: true },
  existingLoans: { type: Number, default: 0 },
  creditScore: { type: Number, default: 700 },

  // --- Dream Property Data (From forms) ---
  property: {
    name: { type: String, required: true },
    type: { type: String, required: true },
    location: { type: String, required: true },
    targetPrice: { type: Number, required: true },
    downPaymentPercentage: { type: Number, default: 20 },
    desiredTimelineYears: { type: Number, required: true },
  },

  // --- Analysis Results (Generated by the server) ---
  analysis: {
    // THIS FIELD IS ADDED TO MATCH THE OUTPUT FROM financialAnalysis.js
    monthlySavingsPotential: { type: Number, default: 0 }, 
    
    affordabilityScore: { type: Number, default: 0 },
    estimatedEMI: { type: Number, default: 0 },
    monthlySavingsRequired: { type: Number, default: 0 },
    keyRecommendations: { type: String, default: 'No analysis run yet.' },
    aiAnalysisMarkdown: { type: String, default: '' }, 
  },

  date: { type: Date, default: Date.now },
});

module.exports = mongoose.model('FinancialProfile', FinancialProfileSchema);
